# subset of Makefile used to generate headers on demand

-include $(OBJS:.o=.d)

SHELL := bash

gen/word_table.h: $(SRC)
	@mkdir -p gen
	sed -n -e 's/.*WORD([^,]*, *\([a-zA-Z0-9_]*\).*).*/extern reduce_t func_\1;/p' $(SRC) | sort > $@.new
	echo '#define WORDS {\' >> $@.new
	N=$$(cat $(SRC) | grep -e 'WORD(.*)' -c); echo "WORD_COUNT($$N),\\" >> $@.new
	sed -n -e 's/.*\(WORD(.*)\).*/\1,\\/p' $(SRC) | LC_ALL=C sort -t \" -k 2,2 >> $@.new
	echo '}' >> $@.new
	./scripts/update.sh $@ $@.new

gen/test_table.h: $(SRC)
	@mkdir -p gen
	sed -n -e 's/^ *int test_\([a-zA-Z0-9_]*\).*/extern int test_\1();/p' $(SRC) | sort > $@.new
	echo '#define TESTS {\' >> $@.new
	sed -n -e 's/^ *int test_\([a-zA-Z0-9_]*\).*/TEST(\1),\\/p' $(SRC) | LC_ALL=C sort >> $@.new
	echo '}' >> $@.new
	./scripts/update.sh $@ $@.new

gen/command_table.h: $(SRC)
	@mkdir -p gen
	sed -n -e 's/^ *void command_\([a-zA-Z0-9_]*\).*/extern void command_\1(cell_t *);/p' $(SRC) | sort > $@.new
	echo '#define COMMANDS {\' >> $@.new
	sed -n -e 's/^ *void command_\([a-zA-Z0-9_]*\).*/COMMAND(\1),\\/p' $(SRC) | LC_ALL=C sort >> $@.new
	echo '}' >> $@.new
	./scripts/update.sh $@ $@.new

gen/git_log.h: LOG = $(shell git log -1 --oneline)
gen/git_log.h: $(SRC)
	@mkdir -p gen
	if git diff-index --quiet HEAD --; then \
		echo "#define GIT_LOG \"$(LOG)\"" > $@.new; \
	else \
		echo "#define GIT_LOG \"$(LOG) [DIRTY]\"" > $@.new; \
	fi
	./scripts/update.sh $@ $@.new

gen/%.h: %.c makeheaders/makeheaders
	@mkdir -p gen
	./makeheaders/makeheaders $*.c:gen/$*.h.new
	./scripts/update.sh gen/$*.h gen/$*.h.new

linenoise/linenoise.h:
	git submodule init
	git submodule update

makeheaders/makeheaders: makeheaders/makeheaders.c
	$(CC) -O -w makeheaders/makeheaders.c -o makeheaders/makeheaders
