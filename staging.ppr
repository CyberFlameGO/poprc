module staging:

imports:
  module list
  module stack
  module control

__ a [f] -> a fa
peek: [dup] dip12 ap11 swap drop

__ a [f] [g] -> fa ga
fork: [peek swap] dip22 ap11 swap drop

__ a b [f] [g] -> fa gb
para: [dip11] dip32 ap11 swap drop

__ a [cond] [f] -> fa
__ f fails if cond does not return True
if: [peek] dip22 swap [ap11 swap drop] dip21 !

__ [fn] [test] initial
iterate: dup2 swap ap11 swap drop

check: [|] control.dip21 [dup] swap . . popr !
