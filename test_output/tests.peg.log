loading: tests.peg
@ simple operator => [ 3 ]
: 1 2 +
 [ 3 ]
@ alts => [ { 10 | 15 | 14 | 21 } ]
: 2 3 | 5 7 | *
 [ { 10 | 14 | 15 | 21 } ]
@ pushl/popr  => [ [] 3 ]
: 1 [2+] pushl popr
 [ [] 3 ]
@ sharing test => [ [ 4 ] [ 2 ] ]
: [1+] dup [3] swap . swap [1] swap .
 [ [ 3 1 + ] [ 1 1 + ] ]
@ sharing test
: [[3 +]] dup popr 1 swap pushl
 [ [ [ 3 + ] ] [] [ 1 id 3 + ] ]
@ dup alt
: 1 2 | dup
 { [ 1 1 ] | [ 2 2 ] }
@ compose alt
: [3] [2*] [2-] | .
 [ { [ 3 2 * ] | [ 3 2 - ] } ]
@ compose dup
: [1] [dup] .
 [ [ 1 dup ] ]
@ pushl sharing
: [3+] dup 1 swap pushl
 [ [ 3 + ] [ 1 id 3 + ] ]
: [dup] dup pushl
 [ [ [ dup ] id dup ] ]
: 1 [dup] dup . pushl popr
 [ [ 1 id 1 id id ] 1 ]
@: [dup pushl popr] dup pushl popr
@: [dup pushl popr swap drop] dup pushl popr swap drop
@ infinite [1]'s
: [dup pushl popr swap 1] dup pushl popr drop popr popr popr
 [ [ 1 id id ] [ 1 id id ] [ 1 id id ] [ [ dup pushl popr swap 1 ] id id id id dup pushl popr swap ] ]
@: [[] 1] [! drop dup 0 swap pushl pushl] [0 == ! drop 0 force [] pushl pushl] | . popr swap drop popr
: [1 2 | ] popr
 [ [] { 1 | 2 } ]
@: [[[! force drop dup [0] pushl swap pushl popr swap drop] [0 == ! force drop [0] force pushl] | . popr swap drop] 1] [! force drop dup [0] pushl swap pushl popr swap drop] [0 == ! force drop [0] force pushl] | . popr swap drop
: [[1 2 |][3 4|] |] popr popr
 { [ [] [] 1 ] | [ [] [] 2 ] | [ [] [] 3 ] | [ [] [] 4 ] }
: [[[5]]] [[[4]] [[3] [2 1 |]|]|]| popr swap drop popr swap drop popr swap drop
 [ { 5 | 4 | 3 | 2 | 1 } ]
@: [[[! force 1- ' [dup] dip12 pushl swap pushl popr swap drop] [0 == ! force drop [0] force pushl] | . popr swap drop] 1] [! force 1- ' [dup] dip12 pushl swap pushl popr swap drop] [0 == ! force drop [0] force pushl] | . popr swap drop
@: [[[! 1- [] force pushl [dup] dip12 pushl swap pushl popr swap drop] [dup 0 == ! force drop [] force pushl force pushl] | . popr swap drop cut] 5] [! 1- [] force pushl [dup] dip12 pushl swap pushl popr swap drop] [dup 0 == ! force drop [] force pushl force pushl] | . popr swap drop cut
: (1 6) (2 7) | dup + dup +
 [ { ( 4 24 ) | ( 8 28 ) } ]
: 1 0 | dup
 { [ 1 1 ] | [ 0 0 ] }
: 1 [1- dup !] [1+ dup !] | pushl popr
 [ [] 2 ]
: [0 |] dup 4 swap pushl popr swap drop swap 3 swap pushl popr swap drop +
 [ { 7 | 4 | 3 | 0 } ]
: [1] [3] | popr pushr popr
 { [ [] 1 ] | [ [] 3 ] }
: [0 1 |] dup popr swap drop swap popr swap drop
 { [ 0 0 ] | [ 1 1 ] }
@: [1 [swap 1+ swap force dup pushl pushl popr swap drop]] [dup] . popr . popr
@: [5 [swap [! 1-] [0 == ! 0 force swap drop] | pushl head swap force dup pushl pushl head]] [dup] . popr . popr
@: [1 [swap ! 1- swap force dup pushl pushl head] [swap 0 == ! 1- force swap] || ] [dup] . popr . popr
@: [100 [swap ! cut 1- swap force dup pushl pushl popr swap popr swap drop swap] [swap 0 == ! cut 1- force swap] || ] [dup] . popr . [swap] . head cut
@: =loop 6 [dup 0 > swap 5- loop swap !] [dup 0 <= !] | pushl
: 0 1 | dup !
 [ 1 ]
: 1 [dup swap drop] pushl popr
 [ [] 1 ]
loaded: tests.peg
