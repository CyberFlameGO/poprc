# functions generated by PoprC
FUNCTIONS = tests.fibl tests.collatz algorithm.gcd algorithm.sum
COMMON = ../vlgen/primitives.v ../vlgen/define.v

BUILD = build
INCLUDE = -I../vlgen -I$(BUILD)/gen

.PHONY: all
all: $(patsubst %_tb.v, $(BUILD)/vcd/%_tb.vcd, $(wildcard *_tb.v))
all: $(patsubst %, $(BUILD)/preprocessed/%, $(wildcard *_swbut.v))

# set FUNCTION for each target in FUNCTION_SRCS
.PHONY: function_vars
function_vars: ../eval
	$(foreach target, $(FUNCTIONS), $(eval $(BUILD)/gen/$(shell ../eval -ident $(target)).v:FUNCTION=$(target)))

print-%:
	@echo $* = $($*)

# keep intermediate files
.SECONDARY:

$(BUILD)/vcd/%_tb.vcd: $(BUILD)/vvp/%_tb.vvp
	@mkdir -p $(dir $@)
	cd $(dir $@) && vvp $(abspath $<)

$(BUILD)/preprocessed/stream_tb.v: stream_tb.v $(COMMON)
	@mkdir -p $(dir $@)
	iverilog -o - -E $(INCLUDE) $< | sed '/^\s*$$/d' > $@

$(BUILD)/preprocessed/%_tb.v: %_tb.v $(BUILD)/gen/%.v $(COMMON)
	@mkdir -p $(dir $@)
	iverilog -o - -E $(INCLUDE) $< | sed '/^\s*$$/d' > $@

$(BUILD)/preprocessed/%_swbut.v: %_swbut.v $(BUILD)/gen/%.v $(COMMON)
	@mkdir -p $(dir $@)
	iverilog -o - -E $(INCLUDE) $< | sed '/^\s*$$/d' > $@

$(BUILD)/vvp/stream_tb.vvp: $(BUILD)/preprocessed/stream_tb.v
	@mkdir -p $(dir $@)
	iverilog -o $@ $(INCLUDE) $<

$(BUILD)/vvp/%_tb.vvp: $(BUILD)/preprocessed/%_tb.v
	@mkdir -p $(dir $@)
	iverilog -o $@ $(INCLUDE) $<

$(BUILD)/gen/%.v: function_vars ../lib.ppr ../tests.ppr ../eval
	@mkdir -p $(dir $@)
	(cd ..; ./eval -lo lib.ppr tests.ppr -cv $(FUNCTION)) > $@

../eval:
	make -C ..

.PHONY: clean
clean:
	rm -rf $(BUILD)
